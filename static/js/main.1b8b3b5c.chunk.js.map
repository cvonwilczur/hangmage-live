{"version":3,"sources":["components/beholderbox/beholder_stage_1.svg","components/beholderbox/beholder_stage_2.svg","components/beholderbox/beholder_stage_3.svg","components/beholderbox/beholder_stage_4.svg","components/beholderbox/beholder_stage_5.svg","components/beholderbox/beholder_stage_6.svg","components/beholderbox/portal.svg","components/inputbox/InputBox.js","components/letter/Letter.js","components/letterbox/LetterBox.js","components/renderbox/RenderBox.js","components/gameover/GameOver.js","components/beholderbox/BeholderBox.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","InputBox","props","react_default","a","createElement","className","onChange","handleChange","onKeyPress","handleSubmitKey","type","onClick","handleSubmitClick","name","value","handleChangeRadio","checked","difficulty","Letter","_ref","letterGuesses","letterValue","guessLetter","includes","LetterBox","secretWord","map","letter","i","components_letter_Letter","key","RenderBox","attempts","letterbox_LetterBox","GameOver","gameWon","class","reset","BeholderBox","src","portal","alt","beholderone","beholdertwo","beholderthree","beholderfour","beholderfive","beholdersix","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","inputValue","target","toLowerCase","_this$state","state","secretWords","easyWords","medWords","hardWords","randomizeNumber","length","split","medArray","filter","word","hardArray","charCode","handleSubmit","_this$state2","oldLetterGuesses","join","push","every","indexOf","upperLimit","min","Math","ceil","max","floor","random","radioValue","_this2","fetch","then","response","text","contents","wordsArray","easyArray","_this$state3","components_beholderbox_BeholderBox","renderbox_RenderBox","gameover_GameOver","inputbox_InputBox","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1b8b3b5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beholder_stage_1.3c6458e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/beholder_stage_2.61673d18.svg\";","module.exports = __webpack_public_path__ + \"static/media/beholder_stage_3.f00fbe0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/beholder_stage_4.6fd1dfb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/beholder_stage_5.ce35d891.svg\";","module.exports = __webpack_public_path__ + \"static/media/beholder_stage_6.51ced283.svg\";","module.exports = __webpack_public_path__ + \"static/media/portal.87733c63.svg\";","import React from 'react';\nimport './Inputbox.css';\n\nconst InputBox = (props) => {\n  return (\n    <div>\n        <div className=\"submitBox\">\n          <input className=\"submitInput\"\n            onChange={props.handleChange}\n            onKeyPress={props.handleSubmitKey}\n            type=\"text\"/>\n\n          <button className=\"submitButton\"\n            onClick={props.handleSubmitClick}\n          >Try a glyph!</button>\n\n        </div>\n\n        <div className=\"difficultyBox\">\n          Choose a Difficulty:\n          <input className=\"radioButton\"\n            type=\"radio\"\n            name=\"difficulty\"\n            value=\"Easy\"\n            onChange={props.handleChangeRadio}\n            checked={props.difficulty === 'Easy'}\n          /> Easy (Default)\n\n          <input className=\"radioButton\"\n            type=\"radio\"\n            name=\"difficulty\"\n            value=\"Medium\"\n            onChange={props.handleChangeRadio}\n            checked={props.difficulty === 'Medium'}\n          /> Medium\n\n          <input className=\"radioButton\"\n            type=\"radio\"\n            name=\"difficulty\"\n            value=\"Hard\"\n            onChange={props.handleChangeRadio}\n            checked={props.difficulty === 'Hard'}\n          /> Hard\n          \n        </div>\n    </div>\n  );\n}\n\nexport default InputBox;\n","import React from 'react';\nimport './Letter.css'\n\nconst Letter = ({ letterGuesses, letterValue, guessLetter }) => {\n  return (\n      guessLetter\n      ?\n        <span className=\"guessedletterTiles\"> {letterGuesses.includes(letterValue) ? letterValue : '☐'} </span>\n      :\n        <span className=\"letterTiles\">{letterGuesses.includes(letterValue) ? letterValue : '☐'} </span>\n  );\n}\n\nexport default Letter;\n","import React from 'react';\nimport Letter from '../letter/Letter';\nimport './Letterbox.css';\n\nconst LetterBox = ({ secretWord, letterGuesses }) => {\n  return (\n      <div className=\"letterBox\">\n\n        <div className=\"letterBoxLetters\">\n          {\n            secretWord.map((letter, i) => {\n              return (\n                <Letter\n                  guessLetter={false}\n                  letterValue={secretWord[i]}\n                  letterGuesses={letterGuesses}\n                  key={i}\n                />\n              )\n            })\n          }\n        </div>\n        \n        <div className=\"guessBoxLetters\">\n            Glyphs Guessed:\n            {\n              letterGuesses.map((letter, i) => {\n                return (\n                  <Letter\n                    guessLetter={true}\n                    letterValue={letterGuesses[i]}\n                    letterGuesses={letterGuesses}\n                    key={i}\n                  />\n               )\n              })\n            }\n          </div>\n      </div>\n  );\n}\n\nexport default LetterBox;\n","import React from 'react';\nimport LetterBox from '../letterbox/LetterBox';\n\nconst RenderBox = ({ secretWord, attempts, letterGuesses }) => {\n  return (\n    <div className=\"renderBox\">\n      <LetterBox\n        secretWord={secretWord}\n        letterGuesses={letterGuesses}\n      />\n      <p>The portal is open! Guess the magic word using your glyphs! You have made {attempts} failed attempts!</p>\n    </div>\n  );\n}\n\nexport default RenderBox;\n","import React from 'react';\nimport './Gameover.css';\n\nconst GameOver = (props) => {\n  return (\n    <div>\n      {props.gameWon\n        ?\n          <div>\n            <p className=\"gameOverMessage\"> You've unsummoned the Beholder! </p>\n\n            <button class=\"submitButton\"\n              onClick={props.reset}\n            >Play Again?</button>\n\n          </div>\n        :\n        <div>\n          <p className=\"gameOverMessage\"> Oh no! The beholder has broken through! You lose! </p>\n\n          <button class=\"submitButton\"\n            onClick={props.reset}\n          >Try Again?</button>\n\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default GameOver;\n","import React from 'react';\nimport './BeholderBox.css';\nimport beholderone from './beholder_stage_1.svg';\nimport beholdertwo from './beholder_stage_2.svg';\nimport beholderthree from './beholder_stage_3.svg';\nimport beholderfour from './beholder_stage_4.svg';\nimport beholderfive from './beholder_stage_5.svg';\nimport beholdersix from './beholder_stage_6.svg';\nimport portal from './portal.svg';\n\n\nconst BeholderBox = (props) => {\n  return (\n      <div className=\"portalBeholderContainer\">\n        <div className=\"portalBox\">\n          <img className='portal'\n            src={portal}\n            alt=\"portal\"\n          />\n        </div>\n        \n        <div className=\"beholderBox\">\n          {(\n            () => {\n              switch(props.attempts){\n                case 1:\n                  return (\n                      <img className='beholder'\n                        src={beholderone}\n                        alt=\"beholder\"\n                      />\n                    );\n                case 2:\n                  return (\n                      <img className='beholdertwo'\n                        src={beholdertwo}\n                        alt=\"beholder\"\n                      />\n                    );\n                case 3:\n                  return (\n                      <img className='beholderthree'\n                        src={beholderthree}\n                        alt=\"beholder\"\n                      />\n                    );\n                case 4:\n                  return (\n                      <img className='beholderfour'\n                        src={beholderfour}\n                        alt=\"beholder\"\n                      />\n                    );\n                case 5:\n                  return (\n                      <img className='beholderfive'\n                        src={beholderfive}\n                        alt=\"beholder\"\n                      />\n                    );\n                case 6:\n                  return (\n                      <img className='beholdersix'\n                        src={beholdersix}\n                        alt=\"beholder\"\n                      />\n                    );\n                default:\n                  break;\n              }\n            })()\n            // ^ IIFE above as JSX only takes expressions\n        }\n        </div>\n    </div>\n  );\n}\n\nexport default BeholderBox;\n","import React, { Component } from 'react';\nimport './App.css';\nimport InputBox from './components/inputbox/InputBox';\nimport RenderBox from './components/renderbox/RenderBox';\nimport GameOver from './components/gameover/GameOver';\nimport BeholderBox from './components/beholderbox/BeholderBox';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      secretWord: [],\n      attempts: 0,\n      letterGuesses: [],\n      inputValue: '',\n      gameWon: false,\n      secretWords: [],\n      easyWords: [],\n      medWords: null,\n      hardWords: null,\n      radioValue: '',\n      difficulty: 'Easy'\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://cors-anywhere.herokuapp.com/http://app.linkedin-reach.io/words')\n      .then(response => response.text())\n      .then(contents => {\n        const wordsArray = contents.split('\\n');\n        const easyArray = wordsArray.filter(word => word.length <= 4);\n        this.setState({ secretWord: easyArray[this.randomizeNumber(easyArray.length)].split(''),\n                        secretWords: wordsArray,\n                        easyWords: easyArray});\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({ inputValue: event.target.value.toLowerCase()});\n  }\n\n  handleChangeRadio = (event) => {\n    const { secretWords, easyWords, medWords, hardWords } = this.state;\n    this.reset();\n    this.setState({ difficulty: event.target.value });\n    switch(event.target.value){\n      case 'Easy':\n        this.setState( {\n          secretWord: easyWords[this.randomizeNumber(easyWords.length)].split('')});\n        break;\n      case 'Medium':\n        if(!medWords){\n          const medArray = secretWords.filter(word => word.length <= 6 && word.length > 4);\n          this.setState({ medWords: medArray,\n                          secretWord: medArray[this.randomizeNumber(medArray.length)].split('')\n                        });\n        } else {\n          this.setState( {\n            secretWord: medWords[this.randomizeNumber(medWords.length)].split('')});\n        }\n        break;\n      case 'Hard':\n        if(!hardWords){\n          const hardArray = secretWords.filter(word => word.length > 6);\n          this.setState({ hardWords: hardArray,\n                          secretWord: hardArray[this.randomizeNumber(hardArray.length)].split('')\n                        });\n        } else {\n          this.setState( {\n            secretWord: hardWords[this.randomizeNumber(hardWords.length)].split('')});\n        }\n        break;\n      default:\n        break;\n      }\n    }\n\n  handleSubmitKey = (event) => {\n    if(event.charCode === 13){\n      return this.handleSubmit(event);\n    }\n  }\n\n  handleSubmitClick = (event) => {\n    return this.handleSubmit(event);\n  }\n\n  handleSubmit = (event) => {\n    const { inputValue, letterGuesses, attempts, secretWord } = this.state;\n    const oldLetterGuesses = letterGuesses;\n    if (!secretWord.includes(inputValue) && inputValue !== secretWord.join('') && inputValue && !oldLetterGuesses.includes(inputValue)){\n      this.setState({ attempts: attempts + 1 });\n    }\n    oldLetterGuesses.push(inputValue);\n    this.setState({ letterGuesses: oldLetterGuesses });\n    if (secretWord.every(letter => letterGuesses.indexOf(letter) > -1) || inputValue === secretWord.join('')){\n      this.setState({ gameWon: true });\n    }\n  }\n\n  reset = () => {\n    const { easyWords } = this.state;\n    this.setState( {\n      letterGuesses: [],\n      attempts: 0,\n      gameWon: false,\n      inputValue: '',\n      difficulty: 'Easy',\n      secretWord: easyWords[this.randomizeNumber(easyWords.length)].split('')});\n  }\n\n  randomizeNumber = (upperLimit) => {\n    let min = Math.ceil(1);\n    let max = Math.floor(upperLimit);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  render() {\n    const { attempts, secretWord, letterGuesses, gameWon, difficulty } = this.state;\n    return (\n      secretWord.length === 0\n      ?\n        <h1 className=\"loading\">The Portal Is Opening!</h1>\n      :\n        (<div className=\"App\">\n          <header>\n            <h1> HangMage </h1>\n          </header>\n\n          <main>\n                <BeholderBox\n                  attempts={attempts}\n                />\n                <RenderBox\n                  attempts={attempts}\n                  secretWord={secretWord}\n                  letterGuesses={letterGuesses}\n                 />\n               {\n                 gameWon || attempts === 6\n                 ?\n                   <GameOver\n                     gameWon={gameWon}\n                     reset={this.reset}\n                   />\n                  :\n                   <InputBox\n                     handleSubmitClick={this.handleSubmitClick}\n                     handleSubmitKey={this.handleSubmitKey}\n                     handleChange={this.handleChange}\n                     handleChangeRadio={this.handleChangeRadio}\n                     difficulty={difficulty}\n                    />\n               }\n               <div className=\"grid\"></div>\n          </main>\n        </div>)\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}